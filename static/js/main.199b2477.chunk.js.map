{"version":3,"sources":["components/Score.js","components/Board.js","components/Interact.js","components/Tictactoe.js","App.js","registerServiceWorker.js","index.js"],"names":["Score","react_default","a","createElement","react","Component","Board","checkColumn","loc","checkRow","Math","ceil","mostLeftBox","_this","mostTopBox","checkVertical","box","type","checkHorizontal","checkDiagonal","topLeftBox","checkWinner","score","Object","objectSpread","props","vertical","horizontal","leftDiagonal","rightDiagonal","isFinish","locateHorizontal","isCircle","spot","y","locateVertical","x","putCircle","centerSpot","cx","cy","r","putCross","topLeftSpot","d","concat","onBoxClick","i","addTurn","turn","updateBox","result","setTimeout","resetGame","renderBox","boxes","_loop","push","key","onClick","className","renderSvgLine","x1","y1","x2","y2","renderMark","keys","map","el","this","Interact","openAboutSwal","swal","imageUrl","imageWidth","imageHeight","title","text","confirmButtonText","footer","openSettingsSwal","html","showCancelButton","cancelButtonText","data-tip","data-for","name","class","dist_default","id","place","effect","Tictactoe","state","1","2","3","4","5","6","7","8","9","setState","components_Score","components_Board","assign","components_Interact","Home","Tictactoe_Tictactoe","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.199b2477.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\r\n\r\nimport './css/Score.css'\r\n\r\nclass Score extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div></div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Score","import React, { Component, Fragment } from 'react'\r\n\r\nimport  './css/Board.css'\r\n\r\nclass Board extends Component { \r\n  checkColumn = (loc) => {\r\n    switch (loc % 3) {\r\n      case (1): return 1;\r\n      case (2): return 2;\r\n      case (0): return 3;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  checkRow = (loc) => {\r\n    switch (Math.ceil(loc / 3)) {\r\n      case (1): return 1;\r\n      case (2): return 2;\r\n      case (3): return 3;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  mostLeftBox = (loc) => {\r\n    if (this.checkColumn(loc) === 1) {\r\n      return loc;\r\n    } else {\r\n      return this.mostLeftBox(loc - 1)\r\n    }\r\n  }\r\n\r\n  mostTopBox = (loc) => {\r\n    if (this.checkRow(loc) === 1) {\r\n      return loc;\r\n    } else {\r\n      return this.mostTopBox(loc - 3)\r\n    }\r\n  }\r\n\r\n  checkVertical = (box, mostTopBox) => {\r\n    if (box[mostTopBox] && box[mostTopBox + 3] && box[mostTopBox + 6]) {\r\n      return (box[mostTopBox].type === box[mostTopBox + 3].type) && (box[mostTopBox + 3].type === box[mostTopBox + 6].type);\r\n    }\r\n  }\r\n\r\n  checkHorizontal = (box, mostLeftBox) => {\r\n    if (box[mostLeftBox] && box[mostLeftBox + 1] && box[mostLeftBox + 2]) {\r\n      return (box[mostLeftBox].type === box[mostLeftBox + 1].type) && (box[mostLeftBox + 1].type === box[mostLeftBox + 2].type);\r\n    }\r\n  }\r\n\r\n  checkDiagonal = (box, type, topLeftBox) => {\r\n    switch (type) {\r\n      case 'left': {\r\n        if (box[topLeftBox] && box[topLeftBox + 4] && box[topLeftBox + 8]) {\r\n          return (box[topLeftBox].type === box[topLeftBox + 4].type) && (box[topLeftBox + 4].type === box[topLeftBox + 8].type)\r\n        } break;\r\n      }\r\n      case 'right': {\r\n        if (box[topLeftBox + 2] && box[(topLeftBox + 2) + 2] && box[(topLeftBox + 2) + 4]) {\r\n          return (box[topLeftBox + 2].type === box[(topLeftBox + 2) + 2].type) && (box[(topLeftBox + 2) + 2].type === box[(topLeftBox + 2) + 4].type)\r\n        } break;\r\n      }\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  checkWinner = (loc, box) => {\r\n    const score = { ...this.props.score }\r\n\r\n    const mostTopBox = this.mostTopBox(loc)\r\n    const mostLeftBox = this.mostLeftBox(loc)\r\n    const topLeftBox = this.mostLeftBox(this.mostTopBox(loc))\r\n\r\n    // Check is there any streak in same column\r\n    const vertical = this.checkVertical(box, mostTopBox)\r\n    // Check is there any streak in same row\r\n    const horizontal = this.checkHorizontal(box, mostLeftBox)\r\n    // Check is there any streak in diagonal from top left to bottom right\r\n    const leftDiagonal = this.checkDiagonal(box, 'left', topLeftBox);\r\n    // Check is there any streak in diagonal from top right to bottom left\r\n    const rightDiagonal = this.checkDiagonal(box, 'right', topLeftBox);\r\n\r\n    // If there is any streak lets decide the winner\r\n    if (vertical || horizontal || leftDiagonal || rightDiagonal) {\r\n      switch (box[loc].type) {\r\n        case ('path'): score[1] += 1; break;\r\n        case ('circle'): score[2] += 1; break;\r\n        default: break;\r\n      }\r\n      return { isFinish: true, score }\r\n    }\r\n    return { isFinish: false }\r\n  }\r\n\r\n  locateHorizontal = (isCircle, loc, spot) => {\r\n    switch(this.checkRow(loc)) {\r\n      case (1): isCircle ? spot.y = 83 : spot.y = 30; break;\r\n      case (2): isCircle ? spot.y = 250 : spot.y = 197; break;\r\n      case (3): isCircle ? spot.y = 417 : spot.y = 364; break;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  locateVertical = (isCircle, loc, spot) => {\r\n    switch (this.checkColumn(loc)) {\r\n      case (1): isCircle ? spot.x = 83 : spot.x = 30; break;\r\n      case (2): isCircle ? spot.x = 250 : spot.x = 197; break;\r\n      case (3): isCircle ? spot.x = 417 : spot.x = 364; break;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  putCircle = (loc) => {\r\n    let centerSpot = { x: null, y: null };\r\n    this.locateHorizontal(true, loc, centerSpot)\r\n    this.locateVertical(true, loc, centerSpot)\r\n\r\n    return <circle cx={centerSpot.x} cy={centerSpot.y} r=\"55\" />\r\n  }\r\n\r\n  putCross = (loc) => {\r\n    let topLeftSpot = { x: null, y: null };\r\n    this.locateHorizontal(false, loc, topLeftSpot)\r\n    this.locateVertical(false, loc, topLeftSpot)\r\n\r\n    return <path d={`\r\n      M${topLeftSpot.x} ${topLeftSpot.y} ${topLeftSpot.x + 107} ${topLeftSpot.y + 107} \r\n      M${topLeftSpot.x} ${topLeftSpot.y + 107} ${topLeftSpot.x + 107} ${topLeftSpot.y}\r\n    `} />\r\n  }\r\n\r\n  onBoxClick = (i) => {\r\n    if (this.props.box[i]) return\r\n\r\n    this.props.addTurn();\r\n\r\n    const box = { ...this.props.box }\r\n\r\n    switch(this.props.turn % 2) {\r\n      case (0): box[i] = this.putCircle(i); break;\r\n      case (1): box[i] = this.putCross(i); break;\r\n      default: break;\r\n    }\r\n\r\n    this.props.updateBox(box)\r\n\r\n    const result = this.checkWinner(i, box);\r\n\r\n    if (this.props.turn === 9 || result.isFinish) {\r\n      setTimeout(() => { this.props.resetGame(result.score) }, 1000)\r\n    }\r\n  }\r\n\r\n  renderBox = () => {\r\n    const boxes = []\r\n    for (let i = 1; i <= 9; i++) {\r\n      boxes.push(<div key={i} onClick={() => this.onBoxClick(i)} className={`box`}></div>)\r\n    }\r\n    return boxes;\r\n  }\r\n\r\n  renderSvgLine = () => ([\r\n    <line key=\"1\" x1=\"5\" y1=\"167\" x2=\"497\" y2=\"167\"></line>,\r\n    <line key=\"2\" x1=\"5\" y1=\"334\" x2=\"497\" y2=\"334\"></line>,\r\n    <line key=\"3\" x1=\"167\" y1=\"5\" x2=\"167\" y2=\"497\"></line>,\r\n    <line key=\"4\" x1=\"334\" y1=\"5\" x2=\"334\" y2=\"497\"></line>,\r\n  ])\r\n\r\n  renderMark = () => ( \r\n    Object.keys(this.props.box).map((el, i) => <Fragment key={i}>{ this.props.box[el] }</Fragment>)\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg>\r\n          { this.renderSvgLine() }\r\n          { this.renderMark() }          \r\n        </svg>\r\n        <div className=\"boxes\">\r\n          { this.renderBox() }\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Board","import React, { Component, Fragment } from 'react'\r\nimport swal from 'sweetalert2'\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nimport './css/Interact.css'\r\n\r\nclass Interact extends Component {\r\n  openAboutSwal = () => {\r\n    swal({\r\n      imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/6/64/Tic-tac-toe.png',\r\n      imageWidth: 200,\r\n      imageHeight: 200,\r\n      title: 'Tic Tac Boom!',\r\n      text: 'Copyright 2018 Ilham Wahabi',\r\n      confirmButtonText: 'Cool',\r\n      footer: `\r\n        <a class=\"see-github\" href=\"https://github.com/IlhamWahabiGX/tictac-boom\">\r\n          See this project on &nbsp;<ion-icon name=\"logo-github\"></ion-icon>\r\n        </a>\r\n      `\r\n    })\r\n  }\r\n\r\n  openSettingsSwal = () => {\r\n    swal({\r\n      html: `\r\n      \r\n      `,\r\n      confirmButtonText: 'Save',\r\n      showCancelButton: true,\r\n      cancelButtonText: 'Cancel'\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n\r\n        <div data-tip data-for='settings' className=\"settings-button\" onClick={this.openSettingsSwal}>\r\n          <ion-icon name=\"settings\" class=\"md-48 button-icon\"></ion-icon>\r\n        </div>\r\n        \r\n        <div data-tip data-for='about' className=\"about-button\" onClick={this.openAboutSwal}>\r\n          <ion-icon name=\"happy\" class=\"md-48 button-icon\"></ion-icon>\r\n        </div>\r\n\r\n        <ReactTooltip id='settings' place=\"right\" type='dark' effect=\"solid\">Settings</ReactTooltip>\r\n        <ReactTooltip id='about' place=\"left\" type='dark' effect=\"solid\">About</ReactTooltip>\r\n\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Interact","import React, { Component } from 'react'\r\n\r\nimport Score from './Score'\r\nimport Board from './Board'\r\nimport Interact from './Interact'\r\n\r\nimport './css/Tictactoe.css'\r\n\r\nexport default class Tictactoe extends Component {\r\n  state = {\r\n    turn: 1,\r\n    score: { 1: 0, 2: 0, },\r\n    box: { 1: null, 2: null, 3: null, 4: null, 5: null, 6: null, 7: null, 8: null, 9: null, }\r\n  }\r\n\r\n  addTurn = () => { this.setState(state => ({ turn: state.turn + 1 })) }\r\n  updateBox = box => { this.setState({ box }) }\r\n  resetGame = score => { this.setState({ turn: 1, score, box: {\r\n      1: null, 2: null, 3: null, 4: null, 5: null, 6: null, 7: null, 8: null, 9: null, \r\n  }})}\r\n\r\n  render(){\r\n    return (\r\n      <section className=\"game\">\r\n        <Score />\r\n        <Board {...this.state} addTurn={this.addTurn} updateBox={this.updateBox} resetGame={this.resetGame} />\r\n        <Interact />\r\n      </section>\r\n    )\r\n  }\r\n}","import React from 'react'\r\n\r\nimport Tictactoe from './components/Tictactoe'\r\n\r\nconst Home = () => (\r\n  <main className=\"home\">\r\n    <Tictactoe />\r\n  </main>\r\n)\r\n\r\nexport default Home","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}