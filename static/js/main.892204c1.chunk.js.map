{"version":3,"sources":["context/settings-context.js","context/game-context.js","context/size-context.js","Tictactoe/Score.js","Tictactoe/Board.js","Tictactoe/Interact.js","Tictactoe/index.js","App.js","index.js"],"names":["SettingsContext","React","SettingsContextProvider","state","theme","mode","player","changeSettings","key","newValue","setState","localStorage","setItem","JSON","stringify","storedSettings","getItem","this","parse","Provider","value","props","children","GameContext","defaultBox","Array","from","length","reduce","acc","_","index","GameContextProvider","turn","score","board","isFinish","addTurn","gameFinish","updateBoard","resetGame","SizeContext","linePoints","wide","alpha","beta","gama","omega","medium","small","squarePoints","teta","delta","SizeContextProvider","linePoint","squarePoint","setPoint","newLinePoint","newSquarePoint","window","innerWidth","addEventListener","removeEventListener","Score","context","firstPlayerScore","secondPlayerScore","className","PureComponent","contextType","Board","checkColumn","loc","checkRow","Math","ceil","mostLeftBox","mostTopBox","checkVertical","box","type","checkHorizontal","checkDiagonal","topLeftBox","checkWinner","vertical","horizontal","leftDiagonal","rightDiagonal","locateHorizontal","isCircle","spot","y","locateVertical","x","putCircle","centerSpot","r","cx","cy","putCross","topLeftSpot","d","onBoxClick","i","result","setTimeout","renderBox","boxes","push","onClick","bind","renderSvgLine","x1","y1","x2","y2","renderMark","Object","keys","map","el","1","2","Alert","withReactContent","swal","Interact","createRef","openAboutSwal","fire","imageUrl","imageWidth","imageHeight","title","text","confirmButtonText","confirmButtonColor","footer","rel","href","target","name","toggleActiveClass","ref","current","childNodes","classList","toggle","openSettingsSwal","settings","onSettingsClicked","html","data-tip","data-for","id","place","effect","showCancelButton","cancelButtonText","then","class","Tictactoe","Consumer","game","size","Home","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.892204c1.chunk.js","sourcesContent":["// @flow\n\nimport * as React from \"react\";\n\ntype SettingsContextProviderProps = {\n  children: React.Node\n};\n\ntype SettingsContextProviderState = {\n  theme: \"light\" | \"dark\",\n  mode: \"human\" | \"ai\",\n  player: \"cross\" | \"circle\"\n};\n\ntype SettingsContextValue = SettingsContextProviderState & {\n  changeSettings: (key: string, newValue: string) => void\n};\n\nexport const SettingsContext = React.createContext<SettingsContextValue>({});\n\nclass SettingsContextProvider extends React.PureComponent<\n  SettingsContextProviderProps,\n  SettingsContextProviderState\n> {\n  state = {\n    theme: \"light\",\n    mode: \"human\",\n    player: \"cross\"\n  };\n\n  changeSettings = (key: string, newValue: string) => {\n    this.setState({ [key]: newValue });\n    localStorage.setItem(\"tictacboom:settings\", JSON.stringify(this.state));\n  };\n\n  componentDidMount() {\n    const storedSettings = localStorage.getItem(\"tictacboom:settings\");\n    if (storedSettings) this.setState({ ...JSON.parse(storedSettings) });\n  }\n\n  render() {\n    return (\n      <SettingsContext.Provider\n        value={{ ...this.state, changeSettings: this.changeSettings }}\n      >\n        {this.props.children}\n      </SettingsContext.Provider>\n    );\n  }\n}\n\nexport default SettingsContextProvider;\n","// @flow\n\nimport * as React from \"react\";\n\ntype Score = { [key: string]: number };\ntype Board = { [key: string]: null | React.Node };\n\ntype GameContextProviderProps = {\n  children: React.Node\n};\n\ntype GameContextProviderState = {\n  turn: number,\n  score: Score,\n  board: Board,\n  isFinish: boolean\n};\n\ntype GameContextValue = GameContextProviderState & {\n  addTurn: () => void,\n  updateBoard: (board: Board) => void,\n  resetGame: (score: Score) => void,\n  gameFinish: () => void\n};\n\nexport const GameContext = React.createContext<GameContextValue>({});\n\nconst defaultBox = Array.from({ length: 9 }).reduce(\n  (acc, _, index) => ({ ...acc, [index]: null }),\n  {}\n);\n\nclass GameContextProvider extends React.PureComponent<\n  GameContextProviderProps,\n  GameContextProviderState\n> {\n  state = {\n    turn: 1,\n    score: { \"1\": 0, \"2\": 0 },\n    board: { ...defaultBox },\n    isFinish: false\n  };\n\n  addTurn = () => {\n    this.setState(state => ({ turn: state.turn + 1 }));\n  };\n\n  gameFinish = () => {\n    this.setState({ isFinish: true });\n  };\n\n  updateBoard = (board: Board) => {\n    this.setState({ board });\n  };\n\n  resetGame = (score: Score) => {\n    this.setState({\n      turn: 1,\n      score,\n      board: { ...defaultBox },\n      isFinish: false\n    });\n  };\n\n  render() {\n    return (\n      <GameContext.Provider\n        value={{\n          ...this.state,\n          addTurn: this.addTurn,\n          updateBoard: this.updateBoard,\n          resetGame: this.resetGame,\n          gameFinish: this.gameFinish\n        }}\n      >\n        {this.props.children}\n      </GameContext.Provider>\n    );\n  }\n}\n\nexport default GameContextProvider;\n","// @flow\n\nimport * as React from \"react\";\n\ntype SizeContextProviderProps = {\n  children: React.Node\n};\n\ntype SizeContextProviderState = {\n  linePoint: { [key: \"alpha\" | \"beta\" | \"gama\" | \"omega\"]: number },\n  squarePoint: {\n    [key: \"alpha\" | \"beta\" | \"gama\" | \"omega\" | \"teta\" | \"delta\"]: number\n  }\n};\n\nexport const SizeContext = React.createContext<SizeContextProviderState>({});\n\nconst linePoints = {\n  wide: { alpha: 5, beta: 167, gama: 334, omega: 497 },\n  medium: { alpha: 3, beta: 124, gama: 248, omega: 362 },\n  small: { alpha: 2, beta: 82, gama: 164, omega: 241 }\n};\n\nconst squarePoints = {\n  wide: {\n    alpha: 83,\n    beta: 30,\n    gama: 250,\n    omega: 197,\n    teta: 417,\n    delta: 364\n  },\n  medium: {\n    alpha: 60,\n    beta: 22.5,\n    gama: 185.5,\n    omega: 150,\n    teta: 308,\n    delta: 271.5\n  },\n  small: {\n    alpha: 38.5,\n    beta: 15,\n    gama: 122.5,\n    omega: 97,\n    teta: 204.5,\n    delta: 179\n  }\n};\n\nclass SizeContextProvider extends React.PureComponent<\n  SizeContextProviderProps,\n  SizeContextProviderState\n> {\n  state = {\n    linePoint: {},\n    squarePoint: {}\n  };\n\n  setPoint = () => {\n    let newLinePoint;\n    let newSquarePoint;\n\n    if (window.innerWidth < 481) {\n      newLinePoint = linePoints.small;\n      newSquarePoint = squarePoints.small;\n    } else if (window.innerWidth < 768) {\n      newLinePoint = linePoints.medium;\n      newSquarePoint = squarePoints.medium;\n    } else {\n      newLinePoint = linePoints.wide;\n      newSquarePoint = squarePoints.wide;\n    }\n\n    this.setState({\n      linePoint: { ...newLinePoint },\n      squarePoint: { ...newSquarePoint }\n    });\n  };\n\n  componentWillMount() {\n    window.addEventListener(\"resize\", this.setPoint);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.setPoint);\n  }\n\n  componentDidMount() {\n    this.setPoint();\n  }\n\n  render() {\n    return (\n      <SizeContext.Provider value={{ ...this.state }}>\n        {this.props.children}\n      </SizeContext.Provider>\n    );\n  }\n}\n\nexport default SizeContextProvider;\n","import React, { PureComponent, Fragment } from \"react\";\r\n\r\nimport \"../css/Tictactoe/Score.css\";\r\n\r\nimport { GameContext } from \"../context/game-context\";\r\n\r\nclass Score extends PureComponent {\r\n  static contextType = GameContext;\r\n\r\n  render() {\r\n    const { score } = this.context;\r\n    const { 1: firstPlayerScore, 2: secondPlayerScore } = score;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"score-board left-score\">\r\n          <p>{firstPlayerScore}</p>\r\n        </div>\r\n        <div className=\"score-board right-score\">\r\n          <p>{secondPlayerScore}</p>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Score;\r\n","import React, { PureComponent, Fragment } from \"react\";\r\n\r\nimport \"../css/Tictactoe/Board.css\";\r\n\r\nclass Board extends PureComponent {\r\n  checkColumn = loc => {\r\n    switch (loc % 3) {\r\n      case 1:\r\n        return 1;\r\n      case 2:\r\n        return 2;\r\n      case 0:\r\n        return 3;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  checkRow = loc => {\r\n    switch (Math.ceil(loc / 3)) {\r\n      case 1:\r\n        return 1;\r\n      case 2:\r\n        return 2;\r\n      case 3:\r\n        return 3;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  mostLeftBox = loc => {\r\n    if (this.checkColumn(loc) === 1) {\r\n      return loc;\r\n    } else {\r\n      return this.mostLeftBox(loc - 1);\r\n    }\r\n  };\r\n\r\n  mostTopBox = loc => {\r\n    if (this.checkRow(loc) === 1) {\r\n      return loc;\r\n    } else {\r\n      return this.mostTopBox(loc - 3);\r\n    }\r\n  };\r\n\r\n  checkVertical = (box, mostTopBox) => {\r\n    if (box[mostTopBox] && box[mostTopBox + 3] && box[mostTopBox + 6]) {\r\n      return (\r\n        box[mostTopBox].type === box[mostTopBox + 3].type &&\r\n        box[mostTopBox + 3].type === box[mostTopBox + 6].type\r\n      );\r\n    }\r\n  };\r\n\r\n  checkHorizontal = (box, mostLeftBox) => {\r\n    if (box[mostLeftBox] && box[mostLeftBox + 1] && box[mostLeftBox + 2]) {\r\n      return (\r\n        box[mostLeftBox].type === box[mostLeftBox + 1].type &&\r\n        box[mostLeftBox + 1].type === box[mostLeftBox + 2].type\r\n      );\r\n    }\r\n  };\r\n\r\n  checkDiagonal = (box, type, topLeftBox) => {\r\n    switch (type) {\r\n      case \"left\": {\r\n        if (box[topLeftBox] && box[topLeftBox + 4] && box[topLeftBox + 8]) {\r\n          return (\r\n            box[topLeftBox].type === box[topLeftBox + 4].type &&\r\n            box[topLeftBox + 4].type === box[topLeftBox + 8].type\r\n          );\r\n        }\r\n        break;\r\n      }\r\n      case \"right\": {\r\n        if (\r\n          box[topLeftBox + 2] &&\r\n          box[topLeftBox + 2 + 2] &&\r\n          box[topLeftBox + 2 + 4]\r\n        ) {\r\n          return (\r\n            box[topLeftBox + 2].type === box[topLeftBox + 2 + 2].type &&\r\n            box[topLeftBox + 2 + 2].type === box[topLeftBox + 2 + 4].type\r\n          );\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  checkWinner = (loc, box) => {\r\n    const score = { ...this.props.score };\r\n\r\n    const mostTopBox = this.mostTopBox(loc);\r\n    const mostLeftBox = this.mostLeftBox(loc);\r\n    const topLeftBox = this.mostLeftBox(this.mostTopBox(loc));\r\n\r\n    // Check is there any streak in same column\r\n    const vertical = this.checkVertical(box, mostTopBox);\r\n    // Check is there any streak in same row\r\n    const horizontal = this.checkHorizontal(box, mostLeftBox);\r\n    // Check is there any streak in diagonal from top left to bottom right\r\n    const leftDiagonal = this.checkDiagonal(box, \"left\", topLeftBox);\r\n    // Check is there any streak in diagonal from top right to bottom left\r\n    const rightDiagonal = this.checkDiagonal(box, \"right\", topLeftBox);\r\n\r\n    // If there is any streak lets decide the winner\r\n    if (vertical || horizontal || leftDiagonal || rightDiagonal) {\r\n      switch (box[loc].type) {\r\n        case \"path\":\r\n          score[1] += 1;\r\n          break;\r\n        case \"circle\":\r\n          score[2] += 1;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return { isFinish: true, score };\r\n    }\r\n    return { isFinish: false, score };\r\n  };\r\n\r\n  locateHorizontal = (isCircle, loc, spot) => {\r\n    const { alpha, beta, gama, omega, teta, delta } = this.props.squarePoint;\r\n\r\n    switch (this.checkRow(loc)) {\r\n      case 1:\r\n        isCircle ? (spot.y = alpha) : (spot.y = beta);\r\n        break;\r\n      case 2:\r\n        isCircle ? (spot.y = gama) : (spot.y = omega);\r\n        break;\r\n      case 3:\r\n        isCircle ? (spot.y = teta) : (spot.y = delta);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  locateVertical = (isCircle, loc, spot) => {\r\n    const { alpha, beta, gama, omega, teta, delta } = this.props.squarePoint;\r\n\r\n    switch (this.checkColumn(loc)) {\r\n      case 1:\r\n        isCircle ? (spot.x = alpha) : (spot.x = beta);\r\n        break;\r\n      case 2:\r\n        isCircle ? (spot.x = gama) : (spot.x = omega);\r\n        break;\r\n      case 3:\r\n        isCircle ? (spot.x = teta) : (spot.x = delta);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  putCircle = loc => {\r\n    let centerSpot = { x: null, y: null };\r\n    this.locateHorizontal(true, loc, centerSpot);\r\n    this.locateVertical(true, loc, centerSpot);\r\n\r\n    let r = 55;\r\n    if (window.innerWidth < 768) r = 41.25;\r\n    if (window.innerWidth < 481) r = 27.5;\r\n\r\n    return <circle cx={centerSpot.x} cy={centerSpot.y} r={r} />;\r\n  };\r\n\r\n  putCross = loc => {\r\n    let topLeftSpot = { x: null, y: null };\r\n    this.locateHorizontal(false, loc, topLeftSpot);\r\n    this.locateVertical(false, loc, topLeftSpot);\r\n\r\n    let r = 107;\r\n    if (window.innerWidth < 768) r = 70;\r\n    if (window.innerWidth < 481) r = 50;\r\n\r\n    return (\r\n      <path\r\n        d={`\r\n      M${topLeftSpot.x} ${topLeftSpot.y} ${topLeftSpot.x + r} ${topLeftSpot.y +\r\n          r} \r\n      M${topLeftSpot.x} ${topLeftSpot.y + r} ${topLeftSpot.x + r} ${\r\n          topLeftSpot.y\r\n        }\r\n    `}\r\n      />\r\n    );\r\n  };\r\n\r\n  onBoxClick = i => {\r\n    if (this.props.board[i] || this.props.isFinish) return;\r\n\r\n    this.props.addTurn();\r\n\r\n    const box = { ...this.props.board };\r\n\r\n    switch (this.props.turn % 2) {\r\n      case 0: {\r\n        box[i] =\r\n          this.props.player === \"cross\" ? this.putCircle(i) : this.putCross(i);\r\n        break;\r\n      }\r\n      case 1: {\r\n        box[i] =\r\n          this.props.player === \"cross\" ? this.putCross(i) : this.putCircle(i);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.props.updateBoard(box);\r\n\r\n    const result = this.checkWinner(i, box);\r\n\r\n    if (this.props.turn === 9 || result.isFinish) {\r\n      this.props.gameFinish();\r\n      setTimeout(() => {\r\n        this.props.resetGame(result.score);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  renderBox = () => {\r\n    const boxes = [];\r\n    for (let i = 1; i <= 9; i++) {\r\n      boxes.push(\r\n        <div\r\n          key={i}\r\n          onClick={this.onBoxClick.bind(this, i)}\r\n          className={`box`}\r\n        />\r\n      );\r\n    }\r\n    return boxes;\r\n  };\r\n\r\n  renderSvgLine = () => {\r\n    let { alpha, beta, gama, omega } = this.props.linePoint;\r\n\r\n    return [\r\n      <line key=\"1\" x1={alpha} y1={beta} x2={omega} y2={beta} />,\r\n      <line key=\"2\" x1={alpha} y1={gama} x2={omega} y2={gama} />,\r\n      <line key=\"3\" x1={beta} y1={alpha} x2={beta} y2={omega} />,\r\n      <line key=\"4\" x1={gama} y1={alpha} x2={gama} y2={omega} />\r\n    ];\r\n  };\r\n\r\n  renderMark = () =>\r\n    Object.keys(this.props.board).map((el, i) => (\r\n      <Fragment key={i}>{this.props.board[el]}</Fragment>\r\n    ));\r\n\r\n  resetGame = () => {\r\n    this.props.resetGame({ 1: 0, 2: 0 });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.resetGame);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.resetGame);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg>\r\n          {this.renderSvgLine()}\r\n          {this.renderMark()}\r\n        </svg>\r\n        <div className=\"boxes\">{this.renderBox()}</div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { PureComponent, Fragment, createRef } from \"react\";\r\nimport swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport \"../css/Tictactoe/Interact.css\";\r\n\r\nconst Alert = withReactContent(swal);\r\n\r\nclass Interact extends PureComponent {\r\n  mode = createRef();\r\n  player = createRef();\r\n  theme = createRef();\r\n\r\n  openAboutSwal = () => {\r\n    Alert.fire({\r\n      imageUrl:\r\n        \"https://upload.wikimedia.org/wikipedia/commons/6/64/Tic-tac-toe.png\",\r\n      imageWidth: 200,\r\n      imageHeight: 200,\r\n      title: \"Tic Tac Boom!\",\r\n      text: `Copyright 2018 Ilham Wahabi`,\r\n      confirmButtonText: \"Cool\",\r\n      confirmButtonColor: this.props.theme === \"light\" ? \"#2196f3\" : \"#263238\",\r\n      footer: (\r\n        <a\r\n          className={`see-github link-${\r\n            this.props.theme === \"light\" ? \"light\" : \"dark\"\r\n          }`}\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://github.com/iwgx/tictac-boom\"\r\n          target=\"_blank\"\r\n        >\r\n          See this project on &nbsp;<ion-icon name=\"logo-github\"></ion-icon>\r\n        </a>\r\n      )\r\n    });\r\n  };\r\n\r\n  toggleActiveClass = ref => {\r\n    for (let button of [...this[ref].current.childNodes]) {\r\n      button.classList.toggle(\"active\");\r\n    }\r\n  };\r\n\r\n  openSettingsSwal = () => {\r\n    let settings = { ...this.props };\r\n\r\n    const onSettingsClicked = (key, value) => {\r\n      if (settings[key] !== value) this.toggleActiveClass(key);\r\n      settings[key] = value;\r\n    };\r\n\r\n    Alert.fire({\r\n      title: \"Game Settings\",\r\n      html: (\r\n        <Fragment>\r\n          <div\r\n            className={`options-items item-${\r\n              settings.theme === \"light\" ? \"light\" : \"dark\"\r\n            }`}\r\n            ref={this.mode}\r\n          >\r\n            <div\r\n              onClick={onSettingsClicked.bind(this, \"mode\", \"human\")}\r\n              className={`options-item ${\r\n                settings.mode === \"human\" ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <ion-icon name=\"contacts\"></ion-icon> Human\r\n            </div>\r\n            <div className={`options-item disabled`} data-tip data-for=\"ai\">\r\n              <ion-icon name=\"desktop\"></ion-icon> AI\r\n            </div>\r\n            <ReactTooltip id=\"ai\" place=\"top\" type=\"dark\" effect=\"solid\">\r\n              Coming soon!\r\n            </ReactTooltip>\r\n          </div>\r\n\r\n          <div\r\n            className={`options-items item-${\r\n              settings.theme === \"light\" ? \"light\" : \"dark\"\r\n            }`}\r\n            ref={this.player}\r\n          >\r\n            <div\r\n              onClick={onSettingsClicked.bind(this, \"player\", \"cross\")}\r\n              className={`options-item ${\r\n                settings.player === \"cross\" ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <ion-icon name=\"close\"></ion-icon> Cross\r\n            </div>\r\n            <div\r\n              onClick={onSettingsClicked.bind(this, \"player\", \"circle\")}\r\n              className={`options-item ${\r\n                settings.player === \"circle\" ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <ion-icon name=\"radio-button-off\"></ion-icon> Circle\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={`options-items item-${\r\n              settings.theme === \"light\" ? \"light\" : \"dark\"\r\n            }`}\r\n            ref={this.theme}\r\n          >\r\n            <div\r\n              onClick={onSettingsClicked.bind(this, \"theme\", \"light\")}\r\n              className={`options-item ${\r\n                settings.theme === \"light\" ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <ion-icon name=\"sunny\"></ion-icon> Light\r\n            </div>\r\n            <div\r\n              onClick={onSettingsClicked.bind(this, \"theme\", \"dark\")}\r\n              className={`options-item ${\r\n                settings.theme === \"dark\" ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <ion-icon name=\"moon\"></ion-icon> Dark\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ),\r\n      confirmButtonText: \"Save\",\r\n      confirmButtonColor: this.props.theme === \"light\" ? \"#2196f3\" : \"#263238\",\r\n      showCancelButton: true,\r\n      cancelButtonText: \"Cancel\"\r\n    }).then(({ value }) => {\r\n      if (!value) return;\r\n\r\n      this.props.changeSettings(\"mode\", settings.mode);\r\n      this.props.changeSettings(\"theme\", settings.theme);\r\n\r\n      if (this.props.player !== settings.player)\r\n        this.props.resetGame({ 1: 0, 2: 0 });\r\n      this.props.changeSettings(\"player\", settings.player);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div\r\n          data-tip\r\n          data-for=\"settings\"\r\n          className=\"settings-button\"\r\n          onClick={this.openSettingsSwal}\r\n        >\r\n          <ion-icon name=\"settings\" class=\"md-48 button-icon\"></ion-icon>\r\n        </div>\r\n        <div\r\n          data-tip\r\n          data-for=\"about\"\r\n          className=\"about-button\"\r\n          onClick={this.openAboutSwal}\r\n        >\r\n          <ion-icon name=\"happy\" class=\"md-48 button-icon\"></ion-icon>\r\n        </div>\r\n\r\n        <ReactTooltip id=\"settings\" place=\"right\" type=\"dark\" effect=\"solid\">\r\n          Settings\r\n        </ReactTooltip>\r\n        <ReactTooltip id=\"about\" place=\"left\" type=\"dark\" effect=\"solid\">\r\n          About\r\n        </ReactTooltip>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Interact;\r\n","import React, { PureComponent } from \"react\";\r\n\r\nimport Score from \"./Score\";\r\nimport Board from \"./Board\";\r\nimport Interact from \"./Interact\";\r\n\r\nimport { SettingsContext } from \"../context/settings-context\";\r\nimport { GameContext } from \"../context/game-context\";\r\nimport { SizeContext } from \"../context/size-context\";\r\n\r\nimport \"../css/Tictactoe/index.css\";\r\n\r\nexport default class Tictactoe extends PureComponent {\r\n  render() {\r\n    return (\r\n      <SettingsContext.Consumer>\r\n        {settings => (\r\n          <section className={`game ${settings.theme}`}>\r\n            <Score />\r\n            <GameContext.Consumer>\r\n              {game => (\r\n                <>\r\n                  <SizeContext.Consumer>\r\n                    {size => (\r\n                      <Board {...game} {...size} player={settings.player} />\r\n                    )}\r\n                  </SizeContext.Consumer>\r\n                  <Interact {...settings} resetGame={game.resetGame} />\r\n                </>\r\n              )}\r\n            </GameContext.Consumer>\r\n          </section>\r\n        )}\r\n      </SettingsContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport SettingsContext from \"./context/settings-context\";\r\nimport GameContext from \"./context/game-context\";\r\nimport SizeContext from \"./context/size-context\";\r\n\r\nimport Tictactoe from \"./Tictactoe\";\r\n\r\nconst Home = () => (\r\n  <main className=\"home\">\r\n    <SettingsContext>\r\n      <GameContext>\r\n        <SizeContext>\r\n          <Tictactoe />\r\n        </SizeContext>\r\n      </GameContext>\r\n    </SettingsContext>\r\n  </main>\r\n);\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport \"./css/index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}