{"version":3,"sources":["context/settings-context.js","components/Score.js","components/Board.js","components/Interact.js","components/Tictactoe.js","App.js","registerServiceWorker.js","index.js"],"names":["createContext","Consumer","Provider","ThemeContext","state","theme","mode","player","changeSettings","type","newValue","_this","setState","Object","defineProperty","react_default","a","createElement","value","objectSpread","this","props","children","Component","Score","react","className","Board","checkColumn","loc","checkRow","Math","ceil","mostLeftBox","mostTopBox","checkVertical","box","checkHorizontal","checkDiagonal","topLeftBox","checkWinner","score","vertical","horizontal","leftDiagonal","rightDiagonal","isFinish","locateHorizontal","isCircle","spot","y","locateVertical","x","putCircle","centerSpot","cx","cy","r","putCross","topLeftSpot","d","concat","onBoxClick","i","addTurn","turn","updateBox","result","setTimeout","resetGame","renderBox","boxes","_loop","push","key","onClick","renderSvgLine","x1","y1","x2","y2","renderMark","keys","map","el","MySwal","withReactContent","swal","Interact","createRef","openAboutSwal","fire","imageUrl","imageWidth","imageHeight","title","text","confirmButtonText","footer","class","rel","href","target","name","toggleActiveClass","ref","_arr","toConsumableArray","current","childNodes","_i","length","classList","toggle","openSettingsSwal","_this$props","html","showCancelButton","cancelButtonText","then","console","log","data-tip","data-for","dist_default","id","place","effect","Tictactoe","1","2","3","4","5","6","7","8","9","newSettings","settings","_this2","components_Score","components_Board","assign","components_Interact","Home","settings_context","Tictactoe_Tictactoe","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0a2573d5.chunk.js","sourcesContent":["import React, { createContext, Component } from 'react'\n\nexport const { Consumer, Provider } = createContext()\n\nclass ThemeContext extends Component {\n  state = {\n    theme: 'light',\n    mode: 'human',\n    player: 'cross',\n  }\n\n  changeSettings = (type) => {\n    let newValue;\n    switch (type) {\n      case 'theme':\n        newValue = this.state.theme === 'light' ? 'dark' : 'light'\n        break;\n      case 'mode':\n        newValue = this.state.mode === 'human' ? 'ai' : 'human'\n        break;\n      case 'player':\n        newValue = this.state.player === 'cross' ? 'circle' : 'cross'\n        break;\n      default: break;\n    }\n\n    this.setState({ [type]: newValue })\n  }\n\n  render() {\n    return (\n      <Provider value={{...this.state, changeSettings: this.changeSettings}}>\n        { this.props.children }      \n      </Provider>\n    )\n  }\n}\n\nexport default ThemeContext","import React, { Component, Fragment } from 'react'\r\n\r\nimport './css/Score.css'\r\n\r\nclass Score extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"score-board left-score\">\r\n          <p>{ this.props[1] }</p>\r\n        </div>\r\n        <div className=\"score-board right-score\">\r\n          <p>{ this.props[2] }</p>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Score","import React, { Component, Fragment } from 'react'\r\n\r\nimport  './css/Board.css'\r\n\r\nclass Board extends Component { \r\n  checkColumn = (loc) => {\r\n    switch (loc % 3) {\r\n      case (1): return 1;\r\n      case (2): return 2;\r\n      case (0): return 3;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  checkRow = (loc) => {\r\n    switch (Math.ceil(loc / 3)) {\r\n      case (1): return 1;\r\n      case (2): return 2;\r\n      case (3): return 3;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  mostLeftBox = (loc) => {\r\n    if (this.checkColumn(loc) === 1) {\r\n      return loc;\r\n    } else {\r\n      return this.mostLeftBox(loc - 1)\r\n    }\r\n  }\r\n\r\n  mostTopBox = (loc) => {\r\n    if (this.checkRow(loc) === 1) {\r\n      return loc;\r\n    } else {\r\n      return this.mostTopBox(loc - 3)\r\n    }\r\n  }\r\n\r\n  checkVertical = (box, mostTopBox) => {\r\n    if (box[mostTopBox] && box[mostTopBox + 3] && box[mostTopBox + 6]) {\r\n      return (box[mostTopBox].type === box[mostTopBox + 3].type) && (box[mostTopBox + 3].type === box[mostTopBox + 6].type);\r\n    }\r\n  }\r\n\r\n  checkHorizontal = (box, mostLeftBox) => {\r\n    if (box[mostLeftBox] && box[mostLeftBox + 1] && box[mostLeftBox + 2]) {\r\n      return (box[mostLeftBox].type === box[mostLeftBox + 1].type) && (box[mostLeftBox + 1].type === box[mostLeftBox + 2].type);\r\n    }\r\n  }\r\n\r\n  checkDiagonal = (box, type, topLeftBox) => {\r\n    switch (type) {\r\n      case 'left': {\r\n        if (box[topLeftBox] && box[topLeftBox + 4] && box[topLeftBox + 8]) {\r\n          return (box[topLeftBox].type === box[topLeftBox + 4].type) && (box[topLeftBox + 4].type === box[topLeftBox + 8].type)\r\n        } break;\r\n      }\r\n      case 'right': {\r\n        if (box[topLeftBox + 2] && box[(topLeftBox + 2) + 2] && box[(topLeftBox + 2) + 4]) {\r\n          return (box[topLeftBox + 2].type === box[(topLeftBox + 2) + 2].type) && (box[(topLeftBox + 2) + 2].type === box[(topLeftBox + 2) + 4].type)\r\n        } break;\r\n      }\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  checkWinner = (loc, box) => {\r\n    const score = { ...this.props.score }\r\n\r\n    const mostTopBox = this.mostTopBox(loc)\r\n    const mostLeftBox = this.mostLeftBox(loc)\r\n    const topLeftBox = this.mostLeftBox(this.mostTopBox(loc))\r\n\r\n    // Check is there any streak in same column\r\n    const vertical = this.checkVertical(box, mostTopBox)\r\n    // Check is there any streak in same row\r\n    const horizontal = this.checkHorizontal(box, mostLeftBox)\r\n    // Check is there any streak in diagonal from top left to bottom right\r\n    const leftDiagonal = this.checkDiagonal(box, 'left', topLeftBox);\r\n    // Check is there any streak in diagonal from top right to bottom left\r\n    const rightDiagonal = this.checkDiagonal(box, 'right', topLeftBox);\r\n\r\n    // If there is any streak lets decide the winner\r\n    if (vertical || horizontal || leftDiagonal || rightDiagonal) {\r\n      switch (box[loc].type) {\r\n        case ('path'): score[1] += 1; break;\r\n        case ('circle'): score[2] += 1; break;\r\n        default: break;\r\n      }\r\n      return { isFinish: true, score }\r\n    }\r\n    return { isFinish: false, score }\r\n  }\r\n\r\n  locateHorizontal = (isCircle, loc, spot) => {\r\n    switch(this.checkRow(loc)) {\r\n      case (1): isCircle ? spot.y = 83 : spot.y = 30; break;\r\n      case (2): isCircle ? spot.y = 250 : spot.y = 197; break;\r\n      case (3): isCircle ? spot.y = 417 : spot.y = 364; break;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  locateVertical = (isCircle, loc, spot) => {\r\n    switch (this.checkColumn(loc)) {\r\n      case (1): isCircle ? spot.x = 83 : spot.x = 30; break;\r\n      case (2): isCircle ? spot.x = 250 : spot.x = 197; break;\r\n      case (3): isCircle ? spot.x = 417 : spot.x = 364; break;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  putCircle = (loc) => {\r\n    let centerSpot = { x: null, y: null };\r\n    this.locateHorizontal(true, loc, centerSpot)\r\n    this.locateVertical(true, loc, centerSpot)\r\n\r\n    return <circle cx={centerSpot.x} cy={centerSpot.y} r=\"55\" />\r\n  }\r\n\r\n  putCross = (loc) => {\r\n    let topLeftSpot = { x: null, y: null };\r\n    this.locateHorizontal(false, loc, topLeftSpot)\r\n    this.locateVertical(false, loc, topLeftSpot)\r\n\r\n    return <path d={`\r\n      M${topLeftSpot.x} ${topLeftSpot.y} ${topLeftSpot.x + 107} ${topLeftSpot.y + 107} \r\n      M${topLeftSpot.x} ${topLeftSpot.y + 107} ${topLeftSpot.x + 107} ${topLeftSpot.y}\r\n    `} />\r\n  }\r\n\r\n  onBoxClick = (i) => {\r\n    if (this.props.box[i]) return\r\n\r\n    this.props.addTurn();\r\n\r\n    const box = { ...this.props.box }\r\n\r\n    switch(this.props.turn % 2) {\r\n      case (0): box[i] = this.putCircle(i); break;\r\n      case (1): box[i] = this.putCross(i); break;\r\n      default: break;\r\n    }\r\n\r\n    this.props.updateBox(box)\r\n\r\n    const result = this.checkWinner(i, box);\r\n\r\n    if (this.props.turn === 9 || result.isFinish) {\r\n      setTimeout(() => { \r\n        this.props.resetGame(result.score) \r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  renderBox = () => {\r\n    const boxes = []\r\n    for (let i = 1; i <= 9; i++) {\r\n      boxes.push(<div key={i} onClick={() => this.onBoxClick(i)} className={`box`}></div>)\r\n    }\r\n    return boxes;\r\n  }\r\n\r\n  renderSvgLine = () => ([\r\n    <line key=\"1\" x1=\"5\" y1=\"167\" x2=\"497\" y2=\"167\"></line>,\r\n    <line key=\"2\" x1=\"5\" y1=\"334\" x2=\"497\" y2=\"334\"></line>,\r\n    <line key=\"3\" x1=\"167\" y1=\"5\" x2=\"167\" y2=\"497\"></line>,\r\n    <line key=\"4\" x1=\"334\" y1=\"5\" x2=\"334\" y2=\"497\"></line>,\r\n  ])\r\n\r\n  renderMark = () => ( \r\n    Object.keys(this.props.box).map((el, i) => <Fragment key={i}>{ this.props.box[el] }</Fragment>)\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg>\r\n          { this.renderSvgLine() }\r\n          { this.renderMark() }          \r\n        </svg>\r\n        <div className=\"boxes\">\r\n          { this.renderBox() }\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Board","import React, { Component, Fragment, createRef } from 'react'\r\nimport swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nimport './css/Interact.css'\r\n\r\nconst MySwal = withReactContent(swal)\r\n\r\nclass Interact extends Component {\r\n  mode = createRef()\r\n  player = createRef()\r\n  theme = createRef()\r\n\r\n  openAboutSwal = () => {\r\n    MySwal.fire({\r\n      imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/6/64/Tic-tac-toe.png',\r\n      imageWidth: 200,\r\n      imageHeight: 200,\r\n      title: 'Tic Tac Boom!',\r\n      text: 'Copyright 2018 Ilham Wahabi',\r\n      confirmButtonText: 'Cool',\r\n      footer: (\r\n        <a \r\n          class=\"see-github\" rel=\"noopener noreferrer\"\r\n          href=\"https://github.com/IlhamWahabiGX/tictac-boom\" target=\"_blank\"\r\n        >\r\n          See this project on &nbsp;<ion-icon name=\"logo-github\"></ion-icon>\r\n        </a>\r\n      ),\r\n    })\r\n  }\r\n\r\n  toggleActiveClass = (ref) => {\r\n    for (let button of [...this[ref].current.childNodes]) {\r\n      button.classList.toggle('active') \r\n    }\r\n  }\r\n\r\n  openSettingsSwal = () => {\r\n    let { mode, player, theme } = this.props;\r\n\r\n    MySwal.fire({\r\n      title: 'Game Settings',\r\n      html: (\r\n        <Fragment>\r\n          <div className=\"options-items\" ref={this.mode}>\r\n            <div\r\n              onClick={() => this.toggleActiveClass('mode')}\r\n              className={`options-item ${mode === 'human' ? 'active' : ''}`}\r\n            >\r\n              <ion-icon name=\"contacts\"></ion-icon> Human\r\n            </div>\r\n            <div\r\n              onClick={() => this.toggleActiveClass('mode')}\r\n              className={`options-item ${mode === 'ai' ? 'active' : ''}`}\r\n            >\r\n              <ion-icon name=\"desktop\"></ion-icon> AI\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"options-items\" ref={this.player}>\r\n            <div\r\n              onClick={() => this.toggleActiveClass('player')} \r\n              className={`options-item ${player === 'cross' ? 'active' : ''}`}\r\n            >\r\n              <ion-icon name=\"close\"></ion-icon> Cross\r\n            </div>\r\n            <div \r\n              onClick={() => this.toggleActiveClass('player')}\r\n              className={`options-item ${player === 'circle' ? 'active' : ''}`}\r\n            >\r\n              <ion-icon name=\"radio-button-off\"></ion-icon> Circle\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"options-items\" ref={this.theme}>\r\n            <div \r\n              onClick={() => this.toggleActiveClass('theme')} \r\n              className={`options-item ${theme === 'light' ? 'active' : ''}`}\r\n            >\r\n              <ion-icon name=\"sunny\"></ion-icon> Light\r\n            </div>\r\n            <div \r\n              onClick={() => this.toggleActiveClass('theme')} \r\n              className={`options-item ${theme === 'dark' ? 'active' : ''}`}\r\n            >\r\n              <ion-icon name=\"moon\"></ion-icon> Dark\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      ),\r\n      confirmButtonText: 'Save',\r\n      showCancelButton: true,\r\n      cancelButtonText: 'Cancel'\r\n    })\r\n    .then(() => {\r\n      console.log({ mode, player, theme })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div\r\n          data-tip data-for='settings' className=\"settings-button\" \r\n          onClick={this.openSettingsSwal}\r\n        >\r\n          <ion-icon name=\"settings\" class=\"md-48 button-icon\"></ion-icon>\r\n        </div>\r\n        <div \r\n          data-tip data-for='about' className=\"about-button\" \r\n          onClick={this.openAboutSwal}\r\n        >\r\n          <ion-icon name=\"happy\" class=\"md-48 button-icon\"></ion-icon>\r\n        </div>\r\n\r\n        <ReactTooltip\r\n          id='settings' place=\"right\" \r\n          type='dark' effect=\"solid\"\r\n        >\r\n          Settings\r\n        </ReactTooltip>\r\n        <ReactTooltip\r\n          id='about' place=\"left\"\r\n          type='dark' effect=\"solid\"\r\n        >\r\n          About\r\n        </ReactTooltip>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Interact","import React, { Component } from 'react'\r\n\r\nimport Score from './Score'\r\nimport Board from './Board'\r\nimport Interact from './Interact'\r\n\r\nimport { Consumer } from '../context/settings-context'\r\n\r\nimport './css/Tictactoe.css'\r\n\r\nexport default class Tictactoe extends Component {\r\n  state = {\r\n    turn: 1,\r\n    score: { 1: 0, 2: 0, },\r\n    box: { 1: null, 2: null, 3: null, 4: null, 5: null, 6: null, 7: null, 8: null, 9: null, }\r\n  }\r\n\r\n  addTurn = () => { this.setState(state => ({ turn: state.turn + 1 })) }\r\n  updateBox = box => { this.setState({ box }) }\r\n  resetGame = score => { this.setState({ turn: 1, score, box: {\r\n      1: null, 2: null, 3: null, 4: null, 5: null, 6: null, 7: null, 8: null, 9: null, \r\n  }})}\r\n  changeSettings = (newSettings) => { this.setState({ settings: newSettings }) }\r\n\r\n  render(){\r\n    return (\r\n      <Consumer>\r\n        {(settings) => (\r\n          <section className={`game ${settings.theme}`}>\r\n            <Score {...this.state.score} />\r\n            <Board {...this.state} addTurn={this.addTurn} updateBox={this.updateBox} resetGame={this.resetGame} />\r\n            <Interact {...settings} />\r\n          </section>\r\n        )}\r\n      </Consumer>\r\n    )\r\n  }\r\n}","import React from 'react'\r\n\r\nimport ThemeContext from './context/settings-context'\r\nimport Tictactoe from './components/Tictactoe'\r\n\r\n\r\nconst Home = () => (\r\n  <main className=\"home\">\r\n    <ThemeContext>\r\n      <Tictactoe />\r\n    </ThemeContext>\r\n  </main>\r\n)\r\n\r\nexport default Home","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}